{"version":3,"sources":["webpack:///./src/views/echartView.vue?44f0","webpack:///./src/views/echartView.vue?25ac","webpack:///src/views/echartView.vue","webpack:///./src/views/echartView.vue?f116","webpack:///./src/views/echartView.vue"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_echartView_vue_vue_type_style_index_0_id_31a0177f_lang_stylus_scoped_true___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_echartView_vue_vue_type_style_index_0_id_31a0177f_lang_stylus_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","n","render","_vm","this","_h","$createElement","_c","_self","staticClass","on","change","search","_m","directives","name","rawName","value","expression","_v","staticRenderFns","attrs","id","echartViewvue_type_script_lang_js_","components","MoneyDialog","MapRange","data","cityName","areaCode","geoJsonData","echartsMap","map","uimap","district","polygons","cityCode","citySelect","districtSelect","opts","areaData","mapData","zip","codeList","isCodeListLoadComplete","downloadTips","isShowTips","mounted","_this","lib_default","a","document","getElementById","$echarts","init","echartsMapClick","AMap","Map","resizeEnable","center","zoom","subdistrict","showbiz","DistrictSearch","status","result","getData","districtList","watch","val","loadAllGeoJson","methods","params","_this2","console","log","$ba","trackEvent","concat","level","i","l","length","setMap","setLevel","setExtensions","loadMapData","_this3","AMapUI","loadUI","DistrictExplorer","districtExplorer","window","eventSupport","loadAreaNode","error","areaNode","mapJson","features","getSubFeatures","loadMap","showTips","_this4","setTimeout","downloadJson","nameType","$refs","dialog","show","blob","Blob","stringify_default","type","filename","Object","saveAs","loopSearch","code","_this5","push","adcode","_i","_this6","_loop","geo","file","substring","every","item","readme","generateAsync","then","content","mapName","registerMap","option","visualMap","pieces","max","label","color","min","textStyle","visibility","series","roam","mapType","selectedMode","showLegendSymbol","itemStyle","normal","areaColor","borderColor","borderWidth","emphasis","areaStyle","setOption","bounds","boundaries","polygon","Polygon","strokeWeight","strokeColor","fillColor","fillOpacity","path","setFitView","innerHTML","subList","contentSub","Option","curlevel","mapJsonList","_i2","properties","Math","random","curList","querySelector","add","levelSub","setAttribute","area","_this7","obj","options","selectedIndex","keyword","text","views_echartViewvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-31ad939d.bbe28e38.js","sourcesContent":["import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./echartView.vue?vue&type=style&index=0&id=31a0177f&lang=stylus&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./echartView.vue?vue&type=style&index=0&id=31a0177f&lang=stylus&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"body\"},[_c('div',{staticClass:\"map\"},[_c('map-range',{on:{\"change\":_vm.search}})],1),_vm._m(0),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowTips),expression:\"isShowTips\"}],staticClass:\"tips\"},[_vm._v(\"正在下载，请耐心等待。。。(可打开控制台查看进度详情)\")])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"echarts\"},[_c('div',{attrs:{\"id\":\"map\"}})])}]\n\nexport { render, staticRenderFns }","\r\n<template>\r\n  <div class=\"body\">\r\n    \r\n    <div class=\"map\">\r\n      <map-range  @change=\"search\" ></map-range>\r\n    </div>\r\n    <div class=\"echarts\">\r\n      <div id=\"map\"></div>\r\n    </div>\r\n    <div class=\"tips\" v-show=\"isShowTips\">正在下载，请耐心等待。。。(可打开控制台查看进度详情)</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport JSZip from \"jszip\";\r\nimport saveAs from \"../saveAs\";\r\nimport MapRange from \"../MapRange\";\r\nimport MoneyDialog from \"../MoneyDialog\";\r\n\r\nexport default {\r\n  name: \"demo\",\r\n  components: {\r\n    MoneyDialog,\r\n    MapRange\r\n  },\r\n  data() {\r\n    return {\r\n      cityName: \"中国\",\r\n      areaCode: 10000,\r\n      geoJsonData: \"\",\r\n      echartsMap: null,\r\n      map: null,\r\n      uimap: null,\r\n      district: null,\r\n      polygons: [],\r\n      cityCode: 100000,\r\n      citySelect: null,\r\n      districtSelect: null,\r\n      opts: {},\r\n      areaData: {},\r\n      mapData: [],\r\n      zip: {}, //打包zip\r\n      codeList: [],\r\n      isCodeListLoadComplete: false, //codeList是否全部获取完毕\r\n      downloadTips: \"下载geoJson数据\", //下载进度提示\r\n      isShowTips: false //是否显示下载提示\r\n    };\r\n  },\r\n  mounted() {\r\n    //实例化zip对象\r\n    this.zip = new JSZip();\r\n\r\n    this.citySelect = document.getElementById(\"city\");\r\n    this.districtSelect = document.getElementById(\"district\");\r\n    this.echartsMap = this.$echarts.init(document.getElementById(\"map\"));\r\n    this.echartsMap.on(\"click\", this.echartsMapClick);\r\n\r\n    this.map = new AMap.Map(\"container\", {\r\n      resizeEnable: true,\r\n      center: [116.30946, 39.937629],\r\n      zoom: 3\r\n    });\r\n    this.opts = {\r\n      subdistrict: 1, //返回下一级行政区\r\n      showbiz: false //最后一级返回街道信息\r\n    };\r\n    this.district = new AMap.DistrictSearch(this.opts); //注意：需要使用插件同步下发功能才能这样直接使用\r\n    this.district.search(\"中国\", (status, result) => {\r\n      if (status == \"complete\") {\r\n        this.getData(result.districtList[0], \"\", 100000);\r\n      }\r\n    });\r\n  },\r\n  watch: {\r\n    isCodeListLoadComplete(val) {\r\n      if (val) {\r\n        this.loadAllGeoJson();\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n   \r\n    echartsMapClick(params) {\r\n      //地图点击事件\r\n      console.log(params);\r\n      this.$ba.trackEvent(\r\n        \"echartsMap\",\r\n        \"点击地图\",\r\n        `${params.data.name}-${params.data.cityCode}`\r\n      );\r\n      if (params.data.level == \"street\") return;\r\n      //清除地图上所有覆盖物\r\n      for (var i = 0, l = this.polygons.length; i < l; i++) {\r\n        this.polygons[i].setMap(null);\r\n      }\r\n      this.cityName = params.data.name;\r\n      this.cityCode = params.data.cityCode;\r\n      this.district.setLevel(params.data.level); //行政区级别\r\n      this.district.setExtensions(\"all\");\r\n      //行政区查询\r\n      //按照adcode进行查询可以保证数据返回的唯一性\r\n      this.district.search(this.cityCode, (status, result) => {\r\n        if (status === \"complete\") {\r\n          this.getData(\r\n            result.districtList[0],\r\n            params.data.level,\r\n            this.cityCode\r\n          );\r\n        }\r\n      });\r\n    },\r\n    loadMapData(areaCode) {\r\n      AMapUI.loadUI([\"geo/DistrictExplorer\"], DistrictExplorer => {\r\n        //创建一个实例\r\n        var districtExplorer = (window.districtExplorer = new DistrictExplorer({\r\n          eventSupport: true, //打开事件支持\r\n          map: this.map\r\n        }));\r\n\r\n        districtExplorer.loadAreaNode(areaCode, (error, areaNode) => {\r\n          if (error) {\r\n            console.error(error);\r\n            return;\r\n          }\r\n          let mapJson = {};\r\n          mapJson.features = areaNode.getSubFeatures();\r\n          console.log(333,this.cityName, mapJson)\r\n          this.loadMap(this.cityName, mapJson);\r\n          this.geoJsonData = mapJson;\r\n        });\r\n      });\r\n    },\r\n    showTips() {\r\n      this.isShowTips = true;\r\n      setTimeout(() => {\r\n        this.isShowTips = false;\r\n      }, 3000);\r\n    },\r\n    downloadJson(nameType) {\r\n      //geo文件下载\r\n      if (nameType === \"all\") {\r\n        this.$ba.trackEvent(\"echartsMap\", \"文件下载\", \"打包下载全部\");\r\n        this.$refs.dialog.show();\r\n        return;\r\n      }\r\n      var blob = new Blob([JSON.stringify(this.geoJsonData)], {\r\n        type: \"text/plain;charset=utf-8\"\r\n      });\r\n      let filename = this.cityName;\r\n      if (nameType === \"code\") {\r\n        filename = this.cityCode;\r\n      }\r\n      this.$ba.trackEvent(\"echartsMap\", \"文件下载\", filename);\r\n      saveAs(blob, `${filename}.geoJson`); //filename\r\n    },\r\n\r\n    loopSearch(code) {\r\n      setTimeout(() => {\r\n        this.district.search(code, (status, result) => {\r\n          if (status == \"complete\") {\r\n            console.log(`${code}--获取成功`);\r\n            for (let i in result.districtList[0].districtList) {\r\n              this.codeList.push({\r\n                name: result.districtList[0].districtList[i].name,\r\n                code: result.districtList[0].districtList[i].adcode,\r\n                level: result.districtList[0].districtList[i].level\r\n              });\r\n              //这边没想出来怎么判断数据是否全部加载完毕了，只能采用这种死办法\r\n              //有更好解决方案的大佬，麻烦告诉我一下，邮箱t@tsy6.com\r\n              //或者直接Github提交PR，在此不胜感激\r\n              if (this.codeList.length >= 428) {\r\n                console.log(\"code获取完成\");\r\n                this.isCodeListLoadComplete = true;\r\n              }\r\n              if (\r\n                result.districtList[0].districtList[i].adcode &&\r\n                result.districtList[0].districtList[i].level != \"city\" &&\r\n                result.districtList[0].districtList[i].level != \"district\" &&\r\n                result.districtList[0].districtList[i].level != \"street\"\r\n              ) {\r\n                this.loopSearch(result.districtList[0].districtList[i].adcode);\r\n              }\r\n            }\r\n          } else {\r\n            //第一遍查询出错，再次执行查询\r\n            console.log(`${code}--第一次获取失败，正在尝试进行第二次获取`);\r\n            this.district.search(code, (status, result) => {\r\n              if (status == \"complete\") {\r\n                console.log(`${code}--第二次获取成功`);\r\n                for (let i in result.districtList[0].districtList) {\r\n                  this.codeList.push({\r\n                    name: result.districtList[0].districtList[i].name,\r\n                    code: result.districtList[0].districtList[i].adcode,\r\n                    level: result.districtList[0].districtList[i].level\r\n                  });\r\n                  //这边没想出来怎么判断数据是否全部加载完毕了，只能采用这种死办法\r\n                  //有更好解决方案的大佬，麻烦告诉我一下，邮箱t@tsy6.com\r\n                  //或者直接Github提交PR，在此不胜感激\r\n                  if (this.codeList.length >= 428) {\r\n                    console.log(\"code获取完成\");\r\n                    this.isCodeListLoadComplete = true;\r\n                  }\r\n                }\r\n              } else {\r\n                console.log(`${code}--第二次获取失败，请联系email：t@tsy6.com`);\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }, 500);\r\n    },\r\n    loadAllGeoJson() {\r\n      //通过codeList加载全部geoJson数据\r\n      console.log(\"开始加载geoJson数据\");\r\n      AMapUI.loadUI([\"geo/DistrictExplorer\"], DistrictExplorer => {\r\n        //创建一个实例\r\n        var districtExplorer = (window.districtExplorer = new DistrictExplorer({\r\n          eventSupport: true, //打开事件支持\r\n          map: this.map\r\n        }));\r\n        let mapJson = {};\r\n        for (let i in this.codeList) {\r\n          setTimeout(() => {\r\n            districtExplorer.loadAreaNode(\r\n              this.codeList[i].code,\r\n              (error, areaNode) => {\r\n                if (error) {\r\n                  this.codeList[i].geo = \"error\";\r\n                  console.log(\r\n                    `${this.codeList[i].name}--${this.codeList[i].code}，geo 数据获取失败，高德地图的锅^_^`\r\n                  );\r\n                } else {\r\n                  mapJson.features =\r\n                    (areaNode && areaNode.getSubFeatures()) || \"\";\r\n                  this.codeList[i].geo = mapJson;\r\n                  console.log(\r\n                    `${this.codeList[i].level}--${this.codeList[i].name}--${this.codeList[i].code}，geo 数据获取成功，马上为你打包`\r\n                  );\r\n                }\r\n\r\n                if (this.codeList[i].level === \"province\") {\r\n                  this.zip.file(\r\n                    `100000/${this.codeList[i].code}.geoJson`,\r\n                    JSON.stringify(mapJson)\r\n                  );\r\n                } else {\r\n                  this.zip.file(\r\n                    `100000/${this.codeList[i].code.substring(0, 2)}0000/${\r\n                      this.codeList[i].code\r\n                    }.geoJson`,\r\n                    JSON.stringify(mapJson)\r\n                  );\r\n                }\r\n\r\n                if (this.codeList.every(item => item.geo)) {\r\n                  console.log(\"ziped\");\r\n                  let readme = `\\r\\n\r\n                                            项目源码github地址：https://github.com/TangSY/echarts-map-demo （欢迎star）\r\n                                            \\r\\n\r\n                                            个人空间：https://www.hxkj.vip （欢迎闲逛）\r\n                                            \\r\\n\r\n                                             Email：t@tsy6.com  （遇到问题可以反馈）\r\n                                         `;\r\n                  this.zip.file(`readMe(sourceCode).txt`, readme);\r\n                  this.downloadTips = \"文件打包压缩中...\";\r\n                  this.zip.generateAsync({ type: \"blob\" }).then(content => {\r\n                    saveAs(content, \"geoJson数据包.zip\");\r\n                    this.downloadTips = \"下载geoJson数据\";\r\n                    this.isCodeListLoadComplete = false;\r\n                    this.$ba.trackEvent(\r\n                      \"echartsMap\",\r\n                      \"文件下载\",\r\n                      \"打包下载成功\"\r\n                    );\r\n                  });\r\n                }\r\n              }\r\n            );\r\n          }, 100 * i);\r\n        }\r\n      });\r\n    },\r\n    loadMap(mapName, data) {\r\n      console.log(11111, mapName, data);\r\n      // sessionStorage.setItem(mapName,JSON.stringify(data))\r\n      if (data) {\r\n        this.$echarts.registerMap(mapName, data);\r\n        var option = {\r\n          visualMap: {\r\n            type: \"piecewise\",\r\n            pieces: [\r\n              { max: 30, label: \"安全\", color: \"#2c9a42\" },\r\n              { min: 30, max: 60, label: \"警告\", color: \"#d08a00\" },\r\n              { min: 60, label: \"危险\", color: \"#c23c33\" }\r\n            ],\r\n            color: \"#fff\",\r\n            textStyle: {\r\n              color: \"#fff\"\r\n            },\r\n            visibility: \"off\"\r\n          },\r\n          series: [\r\n            {\r\n              name: \"数据名称\",\r\n              type: \"map\",\r\n              roam: false,\r\n              mapType: mapName,\r\n              selectedMode: \"single\",\r\n              showLegendSymbol: false,\r\n              visibility: \"off\",\r\n              itemStyle: {\r\n                normal: {\r\n                  color: \"#ccc\",\r\n                  areaColor: \"#fff\",\r\n                  borderColor: \"#fff\",\r\n                  borderWidth: 0.5,\r\n                  label: {\r\n                    show: true,\r\n                    textStyle: {\r\n                      color: \"rgb(249, 249, 249)\"\r\n                    }\r\n                  }\r\n                },\r\n                emphasis: {\r\n                  areaColor: false,\r\n                  borderColor: \"#fff\",\r\n                  areaStyle: {\r\n                    color: \"#fff\"\r\n                  },\r\n                  label: {\r\n                    show: true,\r\n                    textStyle: {\r\n                      color: \"rgb(249, 249, 249)\"\r\n                    }\r\n                  }\r\n                }\r\n              },\r\n              data: this.mapData\r\n            }\r\n          ]\r\n        };\r\n        console.log(77777,this.mapData)\r\n        this.echartsMap.setOption(option);\r\n      }\r\n    },\r\n    getData(data, level, adcode) {\r\n      var bounds = data.boundaries;\r\n      if (bounds) {\r\n        for (var i = 0, l = bounds.length; i < l; i++) {\r\n          var polygon = new AMap.Polygon({\r\n            map: this.map,\r\n            strokeWeight: 1,\r\n            strokeColor: \"#0091ea\",\r\n            fillColor: \"#80d8ff\",\r\n            fillOpacity: 0.2,\r\n            path: bounds[i]\r\n          });\r\n          this.polygons.push(polygon);\r\n        }\r\n        this.map.setFitView(); //地图自适应\r\n      }\r\n\r\n      //清空下一级别的下拉列表\r\n      if (level === \"province\") {\r\n        this.citySelect.innerHTML = \"\";\r\n        this.districtSelect.innerHTML = \"\";\r\n      } else if (level === \"city\") {\r\n        this.districtSelect.innerHTML = \"\";\r\n      }\r\n\r\n      var subList = data.districtList;\r\n      if (subList) {\r\n        var contentSub = new Option(\"--请选择--\");\r\n        var curlevel = subList[0].level;\r\n        if (curlevel === \"street\") {\r\n          let mapJsonList = this.geoJsonData.features;\r\n          let mapJson = {};\r\n          for (let i in mapJsonList) {\r\n            if (mapJsonList[i].properties.name == this.cityName) {\r\n              mapJson.features = [].concat(mapJsonList[i]);\r\n            }\r\n          }\r\n          this.mapData = [];\r\n          this.mapData.push({\r\n            name: this.cityName,\r\n            value: Math.random() * 100,\r\n            level: curlevel\r\n          });\r\n          console.log(222,this.cityName, mapJson)\r\n          this.loadMap(this.cityName, mapJson);\r\n          this.geoJsonData = mapJson;\r\n          return;\r\n        }\r\n        var curList = document.querySelector(\"#\" + curlevel);\r\n        curList.add(contentSub);\r\n        this.mapData = [];\r\n        for (var i = 0, l = subList.length; i < l; i++) {\r\n          var name = subList[i].name;\r\n          var cityCode = subList[i].adcode;\r\n          this.mapData.push({\r\n            name: name,\r\n            value: Math.random() * 100,\r\n            cityCode: cityCode,\r\n            level: curlevel\r\n          });\r\n          var levelSub = subList[i].level;\r\n          contentSub = new Option(name);\r\n          contentSub.setAttribute(\"value\", levelSub);\r\n          contentSub.center = subList[i].center;\r\n          contentSub.adcode = subList[i].adcode;\r\n          curList.add(contentSub);\r\n        }\r\n        this.loadMapData(adcode);\r\n        this.areaData[curlevel] = curList;\r\n      }\r\n    },\r\n    search(area) {\r\n      let obj = this.areaData[area];\r\n      //清除地图上所有覆盖物\r\n      for (var i = 0, l = this.polygons.length; i < l; i++) {\r\n        this.polygons[i].setMap(null);\r\n      }\r\n      var option = obj[obj.options.selectedIndex];\r\n      var keyword = option.text; //关键字\r\n      var adcode = option.adcode;\r\n      this.cityName = keyword;\r\n      this.cityCode = adcode;\r\n      this.$ba.trackEvent(\r\n        \"echartsMap\",\r\n        \"筛选地图\",\r\n        `${this.cityName}-${this.cityCode}`\r\n      );\r\n      this.district.setLevel(option.value); //行政区级别\r\n      this.district.setExtensions(\"all\");\r\n      //行政区查询\r\n      //按照adcode进行查询可以保证数据返回的唯一性\r\n      this.district.search(adcode, (status, result) => {\r\n        if (status === \"complete\") {\r\n          this.getData(result.districtList[0], obj.id, adcode);\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n* {\r\n  font-size: 14px;\r\n}\r\n\r\n.body {\r\n  display: flex;\r\n  width: 100%;\r\n}\r\n\r\n.map, .echarts {\r\n  width: 0;\r\n  flex: 1;\r\n}\r\n\r\n.echarts {\r\n  background: url('../images/bg_bigdata.png') no-repeat;\r\n  background-size: 100% 100%;\r\n}\r\n\r\n#map {\r\n  width: 100%;\r\n  height: 100vh;\r\n}\r\n\r\n.tips {\r\n  position: fixed;\r\n  bottom: 30%;\r\n  left: 40%;\r\n  padding: 10px 15px;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  z-index: 999;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./echartView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./echartView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./echartView.vue?vue&type=template&id=31a0177f&scoped=true&\"\nimport script from \"./echartView.vue?vue&type=script&lang=js&\"\nexport * from \"./echartView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./echartView.vue?vue&type=style&index=0&id=31a0177f&lang=stylus&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"31a0177f\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}